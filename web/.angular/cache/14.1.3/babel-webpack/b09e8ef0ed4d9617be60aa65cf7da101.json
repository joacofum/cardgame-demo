{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    constructor(authService, router) {\n      this.authService = authService;\n      this.router = router;\n      this.FormRegister = new FormGroup({\n        email: new FormControl(),\n        password: new FormControl()\n      });\n    }\n\n    ngOnInit() {}\n\n    onSubmit() {\n      this.authService.register(this.FormRegister.value).then(resp => {\n        console.log(resp);\n        this.router.navigate(['/login']);\n      }).catch(error => console.log(error));\n    }\n\n  }\n\n  RegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  RegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 10,\n    vars: 1,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\"], [\"type\", \"password\"], [\"type\", \"submit\", \"value\", \"Registrarse\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\")(2, \"label\");\n        i0.ɵɵtext(3, \"Email: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\")(6, \"label\");\n        i0.ɵɵtext(7, \"Password: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 3);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.FormRegister);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective]\n  });\n  return RegisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}